{"version":3,"file":"wavencoder.min.js","sources":["../src/wavencoder.js"],"sourcesContent":["define(['jquery', 'core/log'], function ($, log) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file is the engine that drives audio rec and canvas drawing. TT Recorder is the just the glory kid\n     */\n\n    log.debug('qtype_aitext Wav Encoder initialising');\n\n    return {\n\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(sampleRate, numChannels) {\n            this.sampleRate = sampleRate;\n            this.numChannels = numChannels;\n            this.numSamples = 0;\n            this.dataViews = [];\n        },\n\n        encode: function(buffer) {\n            //this would be an event that occurs after recorder has stopped lets just ignore it\n            if(this.dataViews===undefined){\n                return;\n            }\n\n            var len = buffer[0].length,\n                nCh = this.numChannels,\n                view = new DataView(new ArrayBuffer(len * nCh * 2)),\n                offset = 0;\n            for (var i = 0; i < len; ++i) {\n                for (var ch = 0; ch < nCh; ++ch) {\n                    var x = buffer[ch][i] * 0x7fff;\n                    view.setInt16(offset, x < 0 ? Math.max(x, -0x8000) : Math.min(x, 0x7fff), true);\n                    offset += 2;\n                }\n            }\n            this.dataViews.push(view);\n            this.numSamples += len;\n        },\n\n        setString: function(view, offset, str) {\n            var len = str.length;\n            for (var i = 0; i < len; ++i) {\n                view.setUint8(offset + i, str.charCodeAt(i));\n            }\n        },\n\n        finish: function(mimeType) {\n\n            //this would be an event that occurs after recorder has stopped lets just ignore it\n            if(this.dataViews===undefined){\n                return;\n            }\n\n            var dataSize = this.numChannels * this.numSamples * 2;\n            var view = new DataView(new ArrayBuffer(44));\n            this.setString(view, 0, 'RIFF');\n            view.setUint32(4, 36 + dataSize, true);\n            this.setString(view, 8, 'WAVE');\n            this.setString(view, 12, 'fmt ');\n            view.setUint32(16, 16, true);\n            view.setUint16(20, 1, true);\n            view.setUint16(22, this.numChannels, true);\n            view.setUint32(24, this.sampleRate, true);\n            view.setUint32(28, this.sampleRate * 4, true);\n            view.setUint16(32, this.numChannels * 2, true);\n            view.setUint16(34, 16, true);\n            this.setString(view, 36, 'data');\n            view.setUint32(40, dataSize, true);\n            this.dataViews.unshift(view);\n            var blob = new Blob(this.dataViews, { type: 'audio/wav' });\n            this.cleanup();\n            return blob;\n        },\n\n        cancel: function() {\n            delete this.dataViews;\n        },\n\n        cleanup: function() {\n            this.cancel();\n        }\n\n     };//end of return value\n\n});"],"names":["define","$","log","debug","clone","extend","this","init","sampleRate","numChannels","numSamples","dataViews","encode","buffer","undefined","len","length","nCh","view","DataView","ArrayBuffer","offset","i","ch","x","setInt16","Math","max","min","push","setString","str","setUint8","charCodeAt","finish","mimeType","dataSize","setUint32","setUint16","unshift","blob","Blob","type","cleanup","cancel"],"mappings":"AAAAA,iCAAO,CAAC,SAAU,aAAa,SAAUC,EAAGC,YAMxCA,IAAIC,MAAM,yCAEH,CAIHC,MAAO,kBACIH,EAAEI,QAAO,EAAM,GAAIC,OAG9BC,KAAM,SAASC,WAAYC,kBAClBD,WAAaA,gBACbC,YAAcA,iBACdC,WAAa,OACbC,UAAY,IAGrBC,OAAQ,SAASC,gBAEOC,IAAjBR,KAAKK,mBAIJI,IAAMF,OAAO,GAAGG,OAChBC,IAAMX,KAAKG,YACXS,KAAO,IAAIC,SAAS,IAAIC,YAAYL,IAAME,IAAM,IAChDI,OAAS,EACJC,EAAI,EAAGA,EAAIP,MAAOO,MAClB,IAAIC,GAAK,EAAGA,GAAKN,MAAOM,GAAI,KACzBC,EAAoB,MAAhBX,OAAOU,IAAID,GACnBJ,KAAKO,SAASJ,OAAQG,EAAI,EAAIE,KAAKC,IAAIH,GAAI,OAAUE,KAAKE,IAAIJ,EAAG,QAAS,GAC1EH,QAAU,OAGbV,UAAUkB,KAAKX,WACfR,YAAcK,MAGvBe,UAAW,SAASZ,KAAMG,OAAQU,aAC1BhB,IAAMgB,IAAIf,OACLM,EAAI,EAAGA,EAAIP,MAAOO,EACvBJ,KAAKc,SAASX,OAASC,EAAGS,IAAIE,WAAWX,KAIjDY,OAAQ,SAASC,kBAGOrB,IAAjBR,KAAKK,eAIJyB,SAAW9B,KAAKG,YAAcH,KAAKI,WAAa,EAChDQ,KAAO,IAAIC,SAAS,IAAIC,YAAY,UACnCU,UAAUZ,KAAM,EAAG,QACxBA,KAAKmB,UAAU,EAAG,GAAKD,UAAU,QAC5BN,UAAUZ,KAAM,EAAG,aACnBY,UAAUZ,KAAM,GAAI,QACzBA,KAAKmB,UAAU,GAAI,IAAI,GACvBnB,KAAKoB,UAAU,GAAI,GAAG,GACtBpB,KAAKoB,UAAU,GAAIhC,KAAKG,aAAa,GACrCS,KAAKmB,UAAU,GAAI/B,KAAKE,YAAY,GACpCU,KAAKmB,UAAU,GAAsB,EAAlB/B,KAAKE,YAAgB,GACxCU,KAAKoB,UAAU,GAAuB,EAAnBhC,KAAKG,aAAiB,GACzCS,KAAKoB,UAAU,GAAI,IAAI,QAClBR,UAAUZ,KAAM,GAAI,QACzBA,KAAKmB,UAAU,GAAID,UAAU,QACxBzB,UAAU4B,QAAQrB,UACnBsB,KAAO,IAAIC,KAAKnC,KAAKK,UAAW,CAAE+B,KAAM,0BACvCC,UACEH,OAGXI,OAAQ,kBACGtC,KAAKK,WAGhBgC,QAAS,gBACAC"}