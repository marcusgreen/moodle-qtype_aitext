define("qtype_aitext/wavencoder",["jquery","core/log"],(function($,log){return log.debug("qtype_aitext Wav Encoder initialising"),{clone:function(){return $.extend(!0,{},this)},init:function(sampleRate,numChannels){this.sampleRate=sampleRate,this.numChannels=numChannels,this.numSamples=0,this.dataViews=[]},encode:function(buffer){if(void 0!==this.dataViews){for(var len=buffer[0].length,nCh=this.numChannels,view=new DataView(new ArrayBuffer(len*nCh*2)),offset=0,i=0;i<len;++i)for(var ch=0;ch<nCh;++ch){var x=32767*buffer[ch][i];view.setInt16(offset,x<0?Math.max(x,-32768):Math.min(x,32767),!0),offset+=2}this.dataViews.push(view),this.numSamples+=len}},setString:function(view,offset,str){for(var len=str.length,i=0;i<len;++i)view.setUint8(offset+i,str.charCodeAt(i))},finish:function(mimeType){if(void 0!==this.dataViews){var dataSize=this.numChannels*this.numSamples*2,view=new DataView(new ArrayBuffer(44));this.setString(view,0,"RIFF"),view.setUint32(4,36+dataSize,!0),this.setString(view,8,"WAVE"),this.setString(view,12,"fmt "),view.setUint32(16,16,!0),view.setUint16(20,1,!0),view.setUint16(22,this.numChannels,!0),view.setUint32(24,this.sampleRate,!0),view.setUint32(28,4*this.sampleRate,!0),view.setUint16(32,2*this.numChannels,!0),view.setUint16(34,16,!0),this.setString(view,36,"data"),view.setUint32(40,dataSize,!0),this.dataViews.unshift(view);var blob=new Blob(this.dataViews,{type:"audio/wav"});return this.cleanup(),blob}},cancel:function(){delete this.dataViews},cleanup:function(){this.cancel()}}}));

//# sourceMappingURL=wavencoder.min.js.map